<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-05-06T19:56:36+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jann Goschenhofer</title><subtitle>intro jann goschenhofer</subtitle><entry><title type="html">:hammer: dev setup</title><link href="http://localhost:4000/setup/" rel="alternate" type="text/html" title=":hammer: dev setup" /><published>2019-05-04T22:00:00+02:00</published><updated>2019-05-04T22:00:00+02:00</updated><id>http://localhost:4000/setup</id><content type="html" xml:base="http://localhost:4000/setup/">&lt;p&gt;I just recently had to set up my new macbook and as some people asked me about my data science setup for R/ python-scripting, package and app development and working with remote serves, I decided to give a short overview within this post. This setup allows me to have full control over my projects, work with different languages in the same interface and seaminglessly switch to any cloud computing service that allows command line acces via SSH.&lt;/p&gt;

&lt;p&gt;Basically, I use sublimetext3 as an editor and iterm2 with ipython for code execution locally as well as remotely. In the following, I will cover those basic issues:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;sublimetext 3
    &lt;ol&gt;
      &lt;li&gt;sendcode for code execution&lt;/li&gt;
      &lt;li&gt;different terminals (macOS, ubunut, windows)&lt;/li&gt;
      &lt;li&gt;docstrings and code completion via anaconda package&lt;/li&gt;
      &lt;li&gt;r-box for R&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;setup miniconda for virtual environments&lt;/li&gt;
  &lt;li&gt;work and sync on any remote server (SimpleSync)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sublimetext3&quot;&gt;sublimetext3&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;download and install sublime text 3 &lt;a href=&quot;https://www.sublimetext.com/3&quot;&gt;from here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;get terminal:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iterm2&lt;/a&gt; for mac&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://cmder.net&quot;&gt;cmder&lt;/a&gt; for windows&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;install sublime package &lt;a href=&quot;https://github.com/randy3k/SendCode&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sendCode&lt;/code&gt;&lt;/a&gt; to execute line-by-line in your terminal via convenient key bindings:
    &lt;ul&gt;
      &lt;li&gt;enter the sublime package manager: &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + shift + P&lt;/code&gt;, type &lt;code class=&quot;highlighter-rouge&quot;&gt;Control packages:&lt;/code&gt; and choose &lt;code class=&quot;highlighter-rouge&quot;&gt;install packages&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;enter &lt;code class=&quot;highlighter-rouge&quot;&gt;SendCode&lt;/code&gt; and press &lt;code class=&quot;highlighter-rouge&quot;&gt;enter&lt;/code&gt; to install&lt;/li&gt;
      &lt;li&gt;check the SendCode settings and enter your prefered terminal for each language (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;cmder&lt;/code&gt; for windows, &lt;code class=&quot;highlighter-rouge&quot;&gt;iterm&lt;/code&gt; for macOS): &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Package Settings&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;SendCode&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Settings&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;for windows only&lt;/strong&gt;: uncomment and enter the line &lt;code class=&quot;highlighter-rouge&quot;&gt;conemuc: &amp;lt;path to cmder folder&amp;gt;\\vendor\\conemu-maximus5\\ConEmu\\ConEmuC.exe&lt;/code&gt; to show SendCode where to send the code. Should finally look like this: &lt;img src=&quot;/assets/images/cmder.jpg&quot; alt=&quot;cmder issues windoof&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;install sublime package &lt;a href=&quot;https://packagecontrol.io/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt; for python highlighting and docstrings&lt;/li&gt;
  &lt;li&gt;install sublime package &lt;a href=&quot;https://packagecontrol.io/packages/R-Box&quot;&gt;R-Box&lt;/a&gt; for R highlighting and docstrings&lt;/li&gt;
  &lt;li&gt;general: define key-bindings aka shortcuts &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Key Bindings&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;virtual-environments&quot;&gt;virtual environments&lt;/h2&gt;

&lt;p&gt;I use virtual environments for each project to reduce the hustle with different package dependencies etc.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;install &lt;a href=&quot;https://docs.conda.io/en/latest/miniconda.html&quot;&gt;miniconda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;create virtual environment for your project: &lt;code class=&quot;highlighter-rouge&quot;&gt;conda create -n &amp;lt;your env name&amp;gt; python=&amp;lt;python version, e.g. 3.7&amp;gt; anaconda&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;activate it: &lt;code class=&quot;highlighter-rouge&quot;&gt;source activate &amp;lt;your env name&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;deactivate it: &lt;code class=&quot;highlighter-rouge&quot;&gt;source deactivate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;remote-work-via-ssh-and-code-sync&quot;&gt;remote work via ssh and code sync&lt;/h2&gt;

&lt;p&gt;My workflow is me coding on my macbook air and executing code on my private server (for dl stuff and data sets &amp;gt; dummy data sets). This is the setup that enables me to seaminglessly code on my low-power mba and in parallel execute and test the exact same code line-by-line on my high-power, gpu-equipped ubuntu tower. The neat thing is that I can plug in any remote server that enables ssh into this setup (aws, azure, gcloud, baidu…) without changing your workflow.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;get the public ip from your remote server e.g. via checking &lt;a href=&quot;https://www.whatsmyip.org/&quot;&gt;whatsmyip.org&lt;/a&gt; if you have a gui on your remote&lt;/li&gt;
  &lt;li&gt;ssh on from your locale your remote server and authenticate via pwd, e.g.: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh &amp;lt;your name&amp;gt;@&amp;lt;remote ip, e.g.: 187.222.12.177&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;create a ssh-key on our locale: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-keygen&lt;/code&gt; &lt;strong&gt;careful: this overwrites existing keys&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;copy your public key to the remote: &lt;code class=&quot;highlighter-rouge&quot;&gt;cat ~/.ssh/id_rsa.pub | ssh &amp;lt;your name&amp;gt;@&amp;lt;the remote ip&amp;gt; &quot;mkdir -p ~/.ssh &amp;amp;&amp;amp; touch ~/.ssh/authorized_keys &amp;amp;&amp;amp; chmod -R go= ~/.ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;now you can easily login via ssh from your locale’s terminal via &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh &amp;lt;your name&amp;gt;@&amp;lt;remote ip&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;create an alias for this long command on your locale: &lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~/. &amp;amp;&amp;amp; touch .bash_aliases &amp;amp;&amp;amp; echo &quot;alias remoteserver='ssh &amp;lt;your name&amp;gt;@&amp;lt;remote ip&amp;gt;'&quot; &amp;gt;&amp;gt; .bash_aliases &amp;amp;&amp;amp; source ~/.bash_aliases&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;now simply type &lt;code class=&quot;highlighter-rouge&quot;&gt;remoteserver&lt;/code&gt; on your locale terminal to ssh into your remote server&lt;/li&gt;
  &lt;li&gt;you might want to sync certain files that you actively develop locally to those on the remote. I sync them using the awesome sublime package &lt;em&gt;SimpleSync&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;install it as explained above&lt;/li&gt;
  &lt;li&gt;set the settings according to your file paths, ip’s etc. via the sublime package settings. The final user settings file should look as follows: &lt;img src=&quot;/assets/images/simplesync.png&quot; alt=&quot;simple sync&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;per default, you will sync files each time you save your locale file. You will get notified on the bottom grey line of the sublime editor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-material&quot;&gt;additional material&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;plot inside your iterm2 terminal with the awesome &lt;a href=&quot;https://github.com/daleroberts/itermplot&quot;&gt;itermplot extension&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;use openSSH within a MNet network (which does not provide IPv4) via &lt;a href=&quot;https://forum.m-net.de/viewtopic.php?f=20&amp;amp;t=8883#p78454&quot;&gt;feste-ip.de&lt;/a&gt; (GER only)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>goschjann</name></author><category term="project" /><category term="setup, dev, hacking, remote" /><summary type="html">I just recently had to set up my new macbook and as some people asked me about my data science setup for R/ python-scripting, package and app development and working with remote serves, I decided to give a short overview within this post. This setup allows me to have full control over my projects, work with different languages in the same interface and seaminglessly switch to any cloud computing service that allows command line acces via SSH.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/setup.jpg" /></entry><entry><title type="html">Setup</title><link href="http://localhost:4000/setup/" rel="alternate" type="text/html" title="Setup" /><published>2019-05-04T00:00:00+02:00</published><updated>2019-05-04T00:00:00+02:00</updated><id>http://localhost:4000/setup</id><content type="html" xml:base="http://localhost:4000/setup/">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;meta name=&quot;tag&quot; content=&quot;setup, dev, hacking, remote&quot;&gt;
&lt;meta name=&quot;description&quot; content=&quot;&amp;quot;my dev environment&amp;quot;&quot;&gt;
&lt;meta name=&quot;projects&quot; content=&quot;true&quot;&gt;
&lt;meta name=&quot;category&quot; content=&quot;project&quot;&gt;
&lt;meta name=&quot;headerimage&quot; content=&quot;true&quot;&gt;
&lt;meta name=&quot;date&quot; content=&quot;2019-05-04 22:00&quot;&gt;
&lt;meta name=&quot;author&quot; content=&quot;goschjann&quot;&gt;
&lt;meta name=&quot;hidden&quot; content=&quot;false # don't count this post in blog pagination&quot;&gt;
&lt;meta name=&quot;layout&quot; content=&quot;post&quot;&gt;
&lt;meta name=&quot;image&quot; content=&quot;/assets/images/setup.jpg&quot;&gt;
&lt;meta name=&quot;externallink&quot; content=&quot;false&quot;&gt;&lt;style&gt;body {
  max-width: 980px;
  border: 1px solid #ddd;
  outline: 1300px solid #fff;
  margin: 16px auto;
}

body .markdown-body
{
  padding: 45px;
}

@font-face {
  font-family: fontawesome-mini;
  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');
}

.markdown-body {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  color: #333333;
  overflow: hidden;
  font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, freesans, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  word-wrap: break-word;
}

.markdown-body a {
  background: transparent;
}

.markdown-body a:active,
.markdown-body a:hover {
  outline: 0;
}

.markdown-body b,
.markdown-body strong {
  font-weight: bold;
}

.markdown-body mark {
  background: #ff0;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.markdown-body sup {
  top: -0.5em;
}
.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.markdown-body img {
  border: 0;
}

.markdown-body hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

.markdown-body pre {
  overflow: auto;
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

.markdown-body input {
  color: inherit;
  font: inherit;
  margin: 0;
}

.markdown-body html input[disabled] {
  cursor: default;
}

.markdown-body input {
  line-height: normal;
}

.markdown-body input[type=&quot;checkbox&quot;] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body table {
  border-collapse: collapse;
  border-spacing: 0;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body .codehilitetable {
  border: 0;
  border-spacing: 0;
}

.markdown-body .codehilitetable tr {
  border: 0;
}

.markdown-body .codehilitetable pre,
.markdown-body .codehilitetable div.codehilite {
  margin: 0;
}

.markdown-body .linenos,
.markdown-body .code,
.markdown-body .codehilitetable td {
  border: 0;
  padding: 0;
}

.markdown-body td:not(.linenos) .linenodiv {
  padding: 0 !important;
}

.markdown-body .code {
  width: 100%;
}

.markdown-body .linenos div pre,
.markdown-body .linenodiv pre,
.markdown-body .linenodiv {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-left-radius: 3px;
  -webkit-border-bottom-left-radius: 3px;
  -moz-border-radius-topleft: 3px;
  -moz-border-radius-bottomleft: 3px;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}

.markdown-body .code div pre,
.markdown-body .code div {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-right-radius: 3px;
  -webkit-border-bottom-right-radius: 3px;
  -moz-border-radius-topright: 3px;
  -moz-border-radius-bottomright: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
}

.markdown-body * {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body input {
  font: 13px Helvetica, arial, freesans, clean, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;
  line-height: 1.4;
}

.markdown-body a {
  color: #4183c4;
  text-decoration: none;
}

.markdown-body a:hover,
.markdown-body a:focus,
.markdown-body a:active {
  text-decoration: underline;
}

.markdown-body hr {
  height: 0;
  margin: 15px 0;
  overflow: hidden;
  background: transparent;
  border: 0;
  border-bottom: 1px solid #ddd;
}

.markdown-body hr:before,
.markdown-body hr:after {
  display: table;
  content: &quot; &quot;;
}

.markdown-body hr:after {
  clear: both;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 15px;
  margin-bottom: 15px;
  line-height: 1.1;
}

.markdown-body h1 {
  font-size: 30px;
}

.markdown-body h2 {
  font-size: 21px;
}

.markdown-body h3 {
  font-size: 16px;
}

.markdown-body h4 {
  font-size: 14px;
}

.markdown-body h5 {
  font-size: 12px;
}

.markdown-body h6 {
  font-size: 11px;
}

.markdown-body blockquote {
  margin: 0;
}

.markdown-body ul,
.markdown-body ol {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body code,
.markdown-body pre,
.markdown-body samp {
  font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body kbd {
  background-color: #e7e7e7;
  background-image: -moz-linear-gradient(#fefefe, #e7e7e7);
  background-image: -webkit-linear-gradient(#fefefe, #e7e7e7);
  background-image: linear-gradient(#fefefe, #e7e7e7);
  background-repeat: repeat-x;
  border-radius: 2px;
  border: 1px solid #cfcfcf;
  color: #000;
  padding: 3px 5px;
  line-height: 10px;
  font: 11px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;
  display: inline-block;
}

.markdown-body&gt;*:first-child {
  margin-top: 0 !important;
}

.markdown-body&gt;*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body .headerlink {
  font: normal 400 16px fontawesome-mini;
  vertical-align: middle;
  margin-left: -16px;
  float: left;
  display: inline-block;
  text-decoration: none;
  opacity: 0;
  color: #333;
}

.markdown-body .headerlink:focus {
  outline: none;
}

.markdown-body h1 .headerlink {
  margin-top: 0.8rem;
}

.markdown-body h2 .headerlink,
.markdown-body h3 .headerlink {
  margin-top: 0.6rem;
}

.markdown-body h4 .headerlink {
  margin-top: 0.2rem;
}

.markdown-body h5 .headerlink,
.markdown-body h6 .headerlink {
  margin-top: 0;
}

.markdown-body .headerlink:hover,
.markdown-body h1:hover .headerlink,
.markdown-body h2:hover .headerlink,
.markdown-body h3:hover .headerlink,
.markdown-body h4:hover .headerlink,
.markdown-body h5:hover .headerlink,
.markdown-body h6:hover .headerlink {
  opacity: 1;
  text-decoration: none;
}

.markdown-body h1 {
  padding-bottom: 0.3em;
  font-size: 2.25em;
  line-height: 1.2;
  border-bottom: 1px solid #eee;
}

.markdown-body h2 {
  padding-bottom: 0.3em;
  font-size: 1.75em;
  line-height: 1.225;
  border-bottom: 1px solid #eee;
}

.markdown-body h3 {
  font-size: 1.5em;
  line-height: 1.43;
}

.markdown-body h4 {
  font-size: 1.25em;
}

.markdown-body h5 {
  font-size: 1em;
}

.markdown-body h6 {
  font-size: 1em;
  color: #777;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body .admonition {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body hr {
  height: 4px;
  padding: 0;
  margin: 16px 0;
  background-color: #e7e7e7;
  border: 0 none;
}

.markdown-body ul,
.markdown-body ol {
  padding-left: 2em;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li&gt;p {
  margin-top: 16px;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: bold;
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body blockquote {
  padding: 0 15px;
  color: #777;
  border-left: 4px solid #ddd;
}

.markdown-body blockquote&gt;:first-child {
  margin-top: 0;
}

.markdown-body blockquote&gt;:last-child {
  margin-bottom: 0;
}

.markdown-body table {
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all;
}

.markdown-body table th {
  font-weight: bold;
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid #ddd;
}

.markdown-body table tr {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

.markdown-body table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

.markdown-body img {
  max-width: 100%;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body code,
.markdown-body samp {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(0,0,0,0.04);
  border-radius: 3px;
}

.markdown-body code:before,
.markdown-body code:after {
  letter-spacing: -0.2em;
  content: &quot;\00a0&quot;;
}

.markdown-body pre&gt;code {
  padding: 0;
  margin: 0;
  font-size: 100%;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .codehilite {
  margin-bottom: 16px;
}

.markdown-body .codehilite pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f7f7f7;
  border-radius: 3px;
}

.markdown-body .codehilite pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body pre {
  word-wrap: normal;
}

.markdown-body pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body pre code:before,
.markdown-body pre code:after {
  content: normal;
}

/* Admonition */
.markdown-body .admonition {
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  position: relative;
  border-radius: 3px;
  border: 1px solid #e0e0e0;
  border-left: 6px solid #333;
  padding: 10px 10px 10px 30px;
}

.markdown-body .admonition table {
  color: #333;
}

.markdown-body .admonition p {
  padding: 0;
}

.markdown-body .admonition-title {
  font-weight: bold;
  margin: 0;
}

.markdown-body .admonition&gt;.admonition-title {
  color: #333;
}

.markdown-body .attention&gt;.admonition-title {
  color: #a6d796;
}

.markdown-body .caution&gt;.admonition-title {
  color: #d7a796;
}

.markdown-body .hint&gt;.admonition-title {
  color: #96c6d7;
}

.markdown-body .danger&gt;.admonition-title {
  color: #c25f77;
}

.markdown-body .question&gt;.admonition-title {
  color: #96a6d7;
}

.markdown-body .note&gt;.admonition-title {
  color: #d7c896;
}

.markdown-body .admonition:before,
.markdown-body .attention:before,
.markdown-body .caution:before,
.markdown-body .hint:before,
.markdown-body .danger:before,
.markdown-body .question:before,
.markdown-body .note:before {
  font: normal normal 16px fontawesome-mini;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  line-height: 1.5;
  color: #333;
  position: absolute;
  left: 0;
  top: 0;
  padding-top: 10px;
  padding-left: 10px;
}

.markdown-body .admonition:before {
  content: &quot;\f056\00a0&quot;;
  color: 333;
}

.markdown-body .attention:before {
  content: &quot;\f058\00a0&quot;;
  color: #a6d796;
}

.markdown-body .caution:before {
  content: &quot;\f06a\00a0&quot;;
  color: #d7a796;
}

.markdown-body .hint:before {
  content: &quot;\f05a\00a0&quot;;
  color: #96c6d7;
}

.markdown-body .danger:before {
  content: &quot;\f057\00a0&quot;;
  color: #c25f77;
}

.markdown-body .question:before {
  content: &quot;\f059\00a0&quot;;
  color: #96a6d7;
}

.markdown-body .note:before {
  content: &quot;\f040\00a0&quot;;
  color: #d7c896;
}

.markdown-body .admonition::after {
  content: normal;
}

.markdown-body .attention {
  border-left: 6px solid #a6d796;
}

.markdown-body .caution {
  border-left: 6px solid #d7a796;
}

.markdown-body .hint {
  border-left: 6px solid #96c6d7;
}

.markdown-body .danger {
  border-left: 6px solid #c25f77;
}

.markdown-body .question {
  border-left: 6px solid #96a6d7;
}

.markdown-body .note {
  border-left: 6px solid #d7c896;
}

.markdown-body .admonition&gt;*:first-child {
  margin-top: 0 !important;
}

.markdown-body .admonition&gt;*:last-child {
  margin-bottom: 0 !important;
}

/* progress bar*/
.markdown-body .progress {
  display: block;
  width: 300px;
  margin: 10px 0;
  height: 24px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #ededed;
  position: relative;
  box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1);
}

.markdown-body .progress-label {
  position: absolute;
  text-align: center;
  font-weight: bold;
  width: 100%; margin: 0;
  line-height: 24px;
  color: #333;
  text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  overflow: hidden;
}

.markdown-body .progress-bar {
  height: 24px;
  float: left;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #96c6d7;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1);
  background-size: 30px 30px;
  background-image: -webkit-linear-gradient(
    135deg, rgba(255, 255, 255, .4) 27%,
    transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%,
    transparent 77%, transparent
  );
  background-image: -moz-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -ms-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -o-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
}

.markdown-body .progress-100plus .progress-bar {
  background-color: #a6d796;
}

.markdown-body .progress-80plus .progress-bar {
  background-color: #c6d796;
}

.markdown-body .progress-60plus .progress-bar {
  background-color: #d7c896;
}

.markdown-body .progress-40plus .progress-bar {
  background-color: #d7a796;
}

.markdown-body .progress-20plus .progress-bar {
  background-color: #d796a6;
}

.markdown-body .progress-0plus .progress-bar {
  background-color: #c25f77;
}

.markdown-body .candystripe-animate .progress-bar{
  -webkit-animation: animate-stripes 3s linear infinite;
  -moz-animation: animate-stripes 3s linear infinite;
  animation: animate-stripes 3s linear infinite;
}

@-webkit-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@-moz-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

.markdown-body .gloss .progress-bar {
  box-shadow:
    inset 0 4px 12px rgba(255, 255, 255, .7),
    inset 0 -12px 0 rgba(0, 0, 0, .05);
}

/* MultiMarkdown Critic Blocks */
.markdown-body .critic_mark {
  background: #ff0;
}

.markdown-body .critic_delete {
  color: #c82829;
  text-decoration: line-through;
}

.markdown-body .critic_insert {
  color: #718c00 ;
  text-decoration: underline;
}

.markdown-body .critic_comment {
  color: #8e908c;
  font-style: italic;
}

.markdown-body .headeranchor {
  font: normal normal 16px fontawesome-mini;
  line-height: 1;
  display: inline-block;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.headeranchor:before {
  content: '\e157';
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 3px;
}

.markdown-body .task-list-item input {
  margin: 0 4px 0.25em -20px;
  vertical-align: middle;
}

/* Media */
@media only screen and (min-width: 480px) {
  .markdown-body {
    font-size:14px;
  }
}

@media only screen and (min-width: 768px) {
  .markdown-body {
    font-size:16px;
  }
}

@media print {
  .markdown-body * {
    background: transparent !important;
    color: black !important;
    filter:none !important;
    -ms-filter: none !important;
  }

  .markdown-body {
    font-size:12pt;
    max-width:100%;
    outline:none;
    border: 0;
  }

  .markdown-body a,
  .markdown-body a:visited {
    text-decoration: underline;
  }

  .markdown-body .headeranchor-link {
    display: none;
  }

  .markdown-body a[href]:after {
    content: &quot; (&quot; attr(href) &quot;)&quot;;
  }

  .markdown-body abbr[title]:after {
    content: &quot; (&quot; attr(title) &quot;)&quot;;
  }

  .markdown-body .ir a:after,
  .markdown-body a[href^=&quot;javascript:&quot;]:after,
  .markdown-body a[href^=&quot;#&quot;]:after {
    content: &quot;&quot;;
  }

  .markdown-body pre {
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  .markdown-body pre,
  .markdown-body blockquote {
    border: 1px solid #999;
    padding-right: 1em;
    page-break-inside: avoid;
  }

  .markdown-body .progress,
  .markdown-body .progress-bar {
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    box-shadow: none;
  }

  .markdown-body .progress {
    border: 1px solid #ddd;
  }

  .markdown-body .progress-bar {
    height: 22px;
    border-right: 1px solid #ddd;
  }

  .markdown-body tr,
  .markdown-body img {
    page-break-inside: avoid;
  }

  .markdown-body img {
    max-width: 100% !important;
  }

  .markdown-body p,
  .markdown-body h2,
  .markdown-body h3 {
    orphans: 3;
    widows: 3;
  }

  .markdown-body h2,
  .markdown-body h3 {
    page-break-after: avoid;
  }
}
&lt;/style&gt;&lt;style&gt;/*GitHub*/
.codehilite {background-color:#fff;color:#333333;}
.codehilite .hll {background-color:#ffffcc;}
.codehilite .c{color:#999988;font-style:italic}
.codehilite .err{color:#a61717;background-color:#e3d2d2}
.codehilite .k{font-weight:bold}
.codehilite .o{font-weight:bold}
.codehilite .cm{color:#999988;font-style:italic}
.codehilite .cp{color:#999999;font-weight:bold}
.codehilite .c1{color:#999988;font-style:italic}
.codehilite .cs{color:#999999;font-weight:bold;font-style:italic}
.codehilite .gd{color:#000000;background-color:#ffdddd}
.codehilite .ge{font-style:italic}
.codehilite .gr{color:#aa0000}
.codehilite .gh{color:#999999}
.codehilite .gi{color:#000000;background-color:#ddffdd}
.codehilite .go{color:#888888}
.codehilite .gp{color:#555555}
.codehilite .gs{font-weight:bold}
.codehilite .gu{color:#800080;font-weight:bold}
.codehilite .gt{color:#aa0000}
.codehilite .kc{font-weight:bold}
.codehilite .kd{font-weight:bold}
.codehilite .kn{font-weight:bold}
.codehilite .kp{font-weight:bold}
.codehilite .kr{font-weight:bold}
.codehilite .kt{color:#445588;font-weight:bold}
.codehilite .m{color:#009999}
.codehilite .s{color:#dd1144}
.codehilite .n{color:#333333}
.codehilite .na{color:teal}
.codehilite .nb{color:#0086b3}
.codehilite .nc{color:#445588;font-weight:bold}
.codehilite .no{color:teal}
.codehilite .ni{color:purple}
.codehilite .ne{color:#990000;font-weight:bold}
.codehilite .nf{color:#990000;font-weight:bold}
.codehilite .nn{color:#555555}
.codehilite .nt{color:navy}
.codehilite .nv{color:teal}
.codehilite .ow{font-weight:bold}
.codehilite .w{color:#bbbbbb}
.codehilite .mf{color:#009999}
.codehilite .mh{color:#009999}
.codehilite .mi{color:#009999}
.codehilite .mo{color:#009999}
.codehilite .sb{color:#dd1144}
.codehilite .sc{color:#dd1144}
.codehilite .sd{color:#dd1144}
.codehilite .s2{color:#dd1144}
.codehilite .se{color:#dd1144}
.codehilite .sh{color:#dd1144}
.codehilite .si{color:#dd1144}
.codehilite .sx{color:#dd1144}
.codehilite .sr{color:#009926}
.codehilite .s1{color:#dd1144}
.codehilite .ss{color:#990073}
.codehilite .bp{color:#999999}
.codehilite .vc{color:teal}
.codehilite .vg{color:teal}
.codehilite .vi{color:teal}
.codehilite .il{color:#009999}
.codehilite .gc{color:#999;background-color:#EAF2F5}
&lt;/style&gt;&lt;title&gt;&quot;:hammer: dev setup&quot;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;article class=&quot;markdown-body&quot;&gt;&lt;p&gt;I just recently had to set up my new macbook and as some people asked me about my data science setup for R/ python-scripting, package and app development and working with remote serves, I decided to give a short overview within this post. This setup allows me to have full control over my projects, work with different languages in the same interface and seaminglessly switch to any cloud computing service that allows command line acces via SSH. &lt;/p&gt;
&lt;p&gt;Basically, I use sublimetext3 as an editor and iterm2 with ipython for code execution locally as well as remotely. In the following, I will cover those basic issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sublimetext 3 &lt;ol&gt;
&lt;li&gt;sendcode for code execution&lt;/li&gt;
&lt;li&gt;different terminals (macOS, ubunut, windows)&lt;/li&gt;
&lt;li&gt;docstrings and code completion via anaconda package&lt;/li&gt;
&lt;li&gt;r-box for R&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;setup miniconda for virtual environments&lt;/li&gt;
&lt;li&gt;work and sync on any remote server (SimpleSync)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;sublimetext3&quot;&gt;sublimetext3&lt;a class=&quot;headerlink&quot; href=&quot;#sublimetext3&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;download and install sublime text 3 &lt;a href=&quot;https://www.sublimetext.com/3&quot;&gt;from here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;get terminal: &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iterm2&lt;/a&gt; for mac &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cmder.net&quot;&gt;cmder&lt;/a&gt; for windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;install sublime package &lt;a href=&quot;https://github.com/randy3k/SendCode&quot;&gt;&lt;code&gt;sendCode&lt;/code&gt;&lt;/a&gt; to execute line-by-line in your terminal via convenient key bindings:&lt;ul&gt;
&lt;li&gt;enter the sublime package manager: &lt;code&gt;cmd + shift + P&lt;/code&gt;, type &lt;code&gt;Control packages:&lt;/code&gt; and choose &lt;code&gt;install packages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enter &lt;code&gt;SendCode&lt;/code&gt; and press &lt;code&gt;enter&lt;/code&gt; to install &lt;/li&gt;
&lt;li&gt;check the SendCode settings and enter your prefered terminal for each language (e.g. &lt;code&gt;cmder&lt;/code&gt; for windows, &lt;code&gt;iterm&lt;/code&gt; for macOS): &lt;code&gt;Preferences&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Package Settings&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;SendCode&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;for windows only&lt;/strong&gt;: uncomment and enter the line &lt;code&gt;conemuc: &amp;lt;path to cmder folder&amp;gt;\\vendor\\conemu-maximus5\\ConEmu\\ConEmuC.exe&lt;/code&gt; to show SendCode where to send the code. Should finally look like this: &lt;img alt=&quot;cmder issues windoof&quot; src=&quot;/assets/images/cmder.jpg&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;install sublime package &lt;a href=&quot;https://packagecontrol.io/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt; for python highlighting and docstrings&lt;/li&gt;
&lt;li&gt;install sublime package &lt;a href=&quot;https://packagecontrol.io/packages/R-Box&quot;&gt;R-Box&lt;/a&gt; for R highlighting and docstrings&lt;/li&gt;
&lt;li&gt;general: define key-bindings aka shortcuts &lt;code&gt;Preferences&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Key Bindings&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;virtual-environments&quot;&gt;virtual environments&lt;a class=&quot;headerlink&quot; href=&quot;#virtual-environments&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I use virtual environments for each project to reduce the hustle with different package dependencies etc. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install &lt;a href=&quot;https://docs.conda.io/en/latest/miniconda.html&quot;&gt;miniconda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;create virtual environment for your project: &lt;code&gt;conda create -n &amp;lt;your env name&amp;gt; python=&amp;lt;python version, e.g. 3.7&amp;gt; anaconda&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;activate it: &lt;code&gt;source activate &amp;lt;your env name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;deactivate it: &lt;code&gt;source deactivate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;remote-work-via-ssh-and-code-sync&quot;&gt;remote work via ssh and code sync&lt;a class=&quot;headerlink&quot; href=&quot;#remote-work-via-ssh-and-code-sync&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;wip&lt;/p&gt;
&lt;!--
* get the public ip from your remote server via [https://www.whatsmyip.org/]()
* ssh on from your locale your remote server and authenticate via pwd, e.g.: `ssh &lt;your name&gt;@187.222.12.177`
* create a ssh-key on our locale: `ssh-keygen` **careful: this overwrites existing keys**
* copy your public key to the remote: `cat ~/.ssh/id_rsa.pub | ssh &lt;your name&gt;@&lt;the remote ip&gt; &quot;mkdir -p ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys &amp;&amp; chmod -R go= ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&quot;`
--&gt;

&lt;h2 id=&quot;additional-material&quot;&gt;additional material&lt;a class=&quot;headerlink&quot; href=&quot;#additional-material&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;plot inside your terminal with the awesome &lt;a href=&quot;https://github.com/daleroberts/itermplot&quot;&gt;itermplot extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use openSSH within a MNet network (which does not provide IPv4) via &lt;a href=&quot;https://forum.m-net.de/viewtopic.php?f=20&amp;amp;t=8883#p78454&quot;&gt;feste-ip.de&lt;/a&gt; (GER only) &lt;/li&gt;
&lt;/ul&gt;&lt;/article&gt;&lt;/body&gt;&lt;/html&gt;</content><author><name></name></author><summary type="html">body { max-width: 980px; border: 1px solid #ddd; outline: 1300px solid #fff; margin: 16px auto; }</summary></entry><entry><title type="html">:page_facing_up: paper on parkinson’s and dl</title><link href="http://localhost:4000/pwpd_paper/" rel="alternate" type="text/html" title=":page_facing_up: paper on parkinson's and dl" /><published>2019-04-24T22:00:00+02:00</published><updated>2019-04-24T22:00:00+02:00</updated><id>http://localhost:4000/pwpd_paper</id><content type="html" xml:base="http://localhost:4000/pwpd_paper/">&lt;p&gt;I pre-published the results of my master’s thesis on &lt;em&gt;Wearable-based Parkinson’s Disease Severity Monitoring using Deep Learning&lt;/em&gt;. Read the paper &lt;a href=&quot;https://arxiv.org/abs/1904.10829&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>goschjann</name></author><category term="project" /><category term="parkinsons, thesis, sensor, wearable, tsc, dl" /><summary type="html">I pre-published the results of my master’s thesis on Wearable-based Parkinson’s Disease Severity Monitoring using Deep Learning. Read the paper here.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/abstract.png" /></entry><entry><title type="html">:mega: talk @ dadada munich 2019</title><link href="http://localhost:4000/dadada2019/" rel="alternate" type="text/html" title=":mega: talk @ dadada munich 2019" /><published>2019-03-17T22:00:00+01:00</published><updated>2019-03-17T22:00:00+01:00</updated><id>http://localhost:4000/dadada2019</id><content type="html" xml:base="http://localhost:4000/dadada2019/">&lt;p&gt;I had the chance to talk about my Master’s thesis at the Datageeks Data Day (DADADA) 2019 in Munich. Awesome event, awesome community and awesome discussions on quantification of uncertainty in machine learning.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;read &lt;a href=&quot;https://goschjann.github.io/ddd_talk/&quot;&gt;the slides&lt;/a&gt; (use fullscreen mode for the optimal experience)&lt;/li&gt;
  &lt;li&gt;watch &lt;a href=&quot;https://www.youtube.com/watch?v=pP6T28otgfk&quot;&gt;the talk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>goschjann</name></author><category term="project" /><category term="parkinsons, sensor data, uncertainty" /><summary type="html">I had the chance to talk about my Master’s thesis at the Datageeks Data Day (DADADA) 2019 in Munich. Awesome event, awesome community and awesome discussions on quantification of uncertainty in machine learning.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/dadada.jpg" /></entry><entry><title type="html">:hammer: cnn based sentiment analysis</title><link href="http://localhost:4000/char_cnn/" rel="alternate" type="text/html" title=":hammer: cnn based sentiment analysis" /><published>2018-05-16T10:00:00+02:00</published><updated>2018-05-16T10:00:00+02:00</updated><id>http://localhost:4000/char_cnn</id><content type="html" xml:base="http://localhost:4000/char_cnn/">&lt;p&gt;Small project on text analysis via CNN’s within a uni seminar. Using an alphabet-based character-level dummy-encoding allows for the application of 1D Cnns for classification of yelp reviews. Based on work from &lt;a href=&quot;https://arxiv.org/abs/1509.01626&quot;&gt;Zhang, Zhao and LeCunn (2015)&lt;/a&gt;. Also included Local Interpretable Model-Agnostic Explanations (&lt;strong&gt;LIME&lt;/strong&gt;) by &lt;a href=&quot;https://homes.cs.washington.edu/~marcotcr/blog/lime/&quot;&gt;Marco Ribeiro&lt;/a&gt; to make sense out of complex decision makers such as CNNs.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;check &lt;a href=&quot;https://github.com/Goschjann/charCnn&quot;&gt;the repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;read &lt;a href=&quot;https://goschjann.github.io/charCnn/&quot;&gt;the slides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>goschjann</name></author><category term="project" /><category term="cnn, deep learning, text, sentiment, yelp" /><summary type="html">Small project on text analysis via CNN’s within a uni seminar. Using an alphabet-based character-level dummy-encoding allows for the application of 1D Cnns for classification of yelp reviews. Based on work from Zhang, Zhao and LeCunn (2015). Also included Local Interpretable Model-Agnostic Explanations (LIME) by Marco Ribeiro to make sense out of complex decision makers such as CNNs.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/charcnn.png" /></entry><entry><title type="html">:hammer: road segmentation</title><link href="http://localhost:4000/road_segmentation/" rel="alternate" type="text/html" title=":hammer: road segmentation" /><published>2018-01-01T09:30:00+01:00</published><updated>2018-01-01T09:30:00+01:00</updated><id>http://localhost:4000/road_segmentation</id><content type="html" xml:base="http://localhost:4000/road_segmentation/">&lt;p&gt;Together with &lt;a href=&quot;https://de.linkedin.com/in/niklas-klein&quot;&gt;Niklas Klein&lt;/a&gt;, I was working on a road segmentation (in: satellite image, out: road map) using the infamous U-Net as part of our master’s curriculum.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;read &lt;a href=&quot;https://github.com/Goschjann/road_segmentation_project/blob/master/slides/talk_datageeks_meetup.pdf&quot;&gt;the slides&lt;/a&gt; from a talk about it at a Meetup in 2018&lt;/li&gt;
  &lt;li&gt;check &lt;a href=&quot;https://github.com/Goschjann/road_segmentation_project&quot;&gt;the repo&lt;/a&gt; and reproduce our results with public data&lt;/li&gt;
&lt;/ul&gt;</content><author><name>goschjann</name></author><category term="project" /><category term="segmentation, u-net, road, satellite, image" /><summary type="html">Together with Niklas Klein, I was working on a road segmentation (in: satellite image, out: road map) using the infamous U-Net as part of our master’s curriculum.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://raw.githubusercontent.com/Goschjann/road_segmentation_project/master/figures/niceresult27.png" /></entry></feed>